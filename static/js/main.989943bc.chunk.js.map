{"version":3,"sources":["components/ui-component/Button/styles.less","utils/localStorageUtils.js","api/apiClient.js","api/Messages.js","api/Base.js","apiSingleton.js","api/index.js","actions/login.js","components/ui-component/TextField/TextField.js","components/ui-component/Button/Button.js","components/pages/LoginPage/LoginPage.js","App.js","assets/muiTheme.js","actions/messages.js","reducers/messages.js","reducers/index.js","index.js","store/configureStore.js","components/ui-component/TextField/styles.less","components/pages/LoginPage/LoginPage.less"],"names":["module","exports","getFromLocalStorage","key","data","serializedData","localStorage","getItem","JSON","parse","err","loadState","undefined","ApiClient","prefix","this","requestUrl","params","request","url","method","body","isFormData","headers","signal","token","init","Accept","stringify","fetch","response","status","Error","json","error","console","warn","MessagesAPI","apiClient","get","post","id","apiFactory","apiPrefix","api","messages","LOGIN","LOGOUT","login","payload","onError","dispatch","a","async","sessions","jwt","userData","decode","setToken","setItem","type","logout","checkSession","log","ExtendedTextField","state","isCount","handleOnFocus","setState","handleOnBlur","props","visible","variant","className","style","value","InputProps","inputProps","textareaClass","rest","classNames","styles","wrapper","TextField","input","classes","root","focused","inputFocused","FormHelperTextProps","helperTextRoot","onFocus","onBlur","maxLength","counter","length","PureComponent","defaultProps","ExtendedButton","color","Button","classnames","label","Label","target","connect","SessionActions","useState","email","password","setUserData","setErrors","handleChange","LoginPage","inputBlock","Grid","container","justify","alignItems","item","xs","placeholder","fullWidth","onChange","useCallback","e","helperText","onClick","App","Component","getMessages","palette","primary","light","main","dark","contrastText","secondary","typography","body1","subheading","button","textTransform","ASSESSMENTS_GET_REQUEST","ASSESSMENTS_GET_SUCCESS","ASSESSMENTS_GET_FAIL","SEND_NOTIFICATION_REQUEST","SEND_NOTIFICATION_SUCCESS","SEND_NOTIFICATION_FAIL","WINDOWS_GET_REQUEST","WINDOWS_GET_SUCCESS","WINDOWS_GET_FAIL","ABILITIES_GET_REQUEST","ABILITIES_GET_SUCCESS","ABILITIES_GET_FAIL","LINKING_CHANGE","initialState","isAssessmentsLoading","getAssessmentsError","isSendLoading","sendError","windows","isGetAbilitiesLoading","abilities","list","combineReducers","action","user","map","isWindowsLoading","store","composeEnhancers","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","mountApp","NextApp","require","default","ReactDOM","render","theme","themes","document","getElementById"],"mappings":"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","file":"static/js/main.989943bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/styles.1d12f542.less\";","export function loadState() {\n    try {\n        const serializedData = localStorage.getItem('jwt');\n\n        if (serializedData === null) return undefined;\n\n        return JSON.parse(serializedData);\n    } catch (err) {\n        return undefined;\n    }\n}\n\nexport function saveState(data) {\n    try {\n        const { jwt, exp } = data;\n        const state = {\n            jwt,\n            exp\n        };\n        const serializedData = JSON.stringify(state);\n\n        localStorage.setItem('jwt', serializedData);\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nexport function getFromLocalStorage(key) {\n    try {\n        const data = loadState();\n\n        return data ? data[key] : undefined;\n    } catch (err) {\n        return undefined;\n    }\n}\n","import { getFromLocalStorage } from '../utils/localStorageUtils';\n\n\nexport default class ApiClient {\n    constructor({ prefix = 'api/v1' } = {}) {\n        this.prefix = prefix;\n    }\n\n    get(requestUrl, params) {\n        return this.request({\n            url   : requestUrl,\n            method: 'GET',\n            params\n        });\n    }\n\n    post(requestUrl, body = {}, params) {\n        return this.request({\n            url   : requestUrl,\n            method: 'POST',\n            body,\n            params\n        });\n    }\n\n    put(requestUrl, body = {}, params) {\n        return this.request({\n            url   : requestUrl,\n            method: 'PUT',\n            body,\n            params\n        });\n    }\n\n    delete(requestUrl, body = {}, params) {\n        return this.request({\n            url   : `${requestUrl}`,\n            method: 'DELETE',\n            body,\n            params\n        });\n    }\n\n    patch(requestUrl, body = {}, params) {\n        return this.request({\n            url   : `${requestUrl}`,\n            method: 'PATCH',\n            body,\n            params\n        });\n    }\n\n    async request({ url, method, body, isFormData, headers, signal }) {\n        const token = getFromLocalStorage('jwt');\n        const init = {\n            method,\n            headers: headers || {\n                Accept        : 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Request-Headers': '*',\n                ...(token ? { 'X-AuthToken': token } : {})\n            },\n            signal\n        };\n\n        if (body && !isFormData) {\n            init.body = JSON.stringify(body);\n        } else {\n            init.body = body;\n        }\n\n        try {\n            const response = await fetch(`${this.prefix}${url}`, init);\n\n            if (response.status >= 400) {\n                throw new Error('Bad response from server');\n            }\n            const data = await response.json();\n\n            if (data && data.status === 1) {\n                return data;\n            }\n\n            throw data.error;\n        } catch (err) {\n            console.warn('Unhandled exeption');\n            console.warn(err);\n            throw err;\n        }\n    }\n}\n","import Base from './Base';\n\nexport default class MessagesAPI extends Base {\n    getMessages(params) {\n        return this.apiClient.get(``, params);\n    }\n    createMessage(data) {\n        return this.apiClient.post(`/create`, data)\n    }\n    updageMessage(id, data) {\n        return this.apiClient.post(`/edit/${id}`, data)\n    }\n}\n//?developer=admin\n","export default class Base {\n    constructor({ apiClient }) {\n        if (!apiClient) throw new Error('[apiClient] required');\n        this.apiClient = apiClient;\n    }\n}\n","import apiFactory from './api';\n\nexport default apiFactory({\n  apiPrefix: 'https://uxcandy.com/~shapoval/test-task-backend/v2/'\n});\n","import ApiClient from './apiClient';\nimport MessagesAPI from './Messages';\n\nexport default function ({ apiPrefix } = {}) {\n    if (!apiPrefix) {\n        throw new Error('[apiPrefix] required');\n    }\n\n    const api = new ApiClient({ prefix: apiPrefix });\n\n    return {\n        apiClient: api,\n        messages: new MessagesAPI({ apiClient: api }),\n    };\n}\n","import jwt          from 'jwt-simple';\nimport api          from '../apiSingleton.js';\n//import { decodeErrorObject } from '../utils/validation';\n\nexport const LOGIN  = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n\nexport function login(payload, onError) {\n    return async dispatch => {\n        try {\n            const { data: { jwt: token } } = await api.sessions.login(payload);\n\n            const userData = jwt.decode(token, '', true);\n\n\n                api.apiClient.setToken(token);\n                localStorage.setItem('token', token);\n\n                dispatch({\n                    type    : LOGIN,\n                    payload : userData\n                });\n        } catch (err) {\n            //onError(decodeErrorObject({ ...err.fields }));\n        }\n    };\n}\n\nexport function logout() {\n    return dispatch => {\n        api.apiClient.setToken('');\n        localStorage.setItem('token', '');\n\n        dispatch({ type: LOGOUT });\n    };\n}\n\nexport function checkSession() {\n    return dispatch => {\n        try {\n            const token = localStorage.getItem('token');\n\n            if (!token) {\n              //  if (pathname !== ROUTES.login) \n\n                return;\n            }\n            api.apiClient.setToken(token);\n\n            const userData = jwt.decode(token, '', true);\n\n            dispatch({\n                type    : LOGIN,\n                payload : userData\n            });\n        } catch (err) {\n          console.log(err)\n        }\n    };\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes                from 'prop-types';\nimport classNames               from 'classnames';\nimport TextField                from '@material-ui/core/TextField';\n\nimport styles                   from './styles.less';\n\nclass ExtendedTextField extends PureComponent {\n    static propTypes = {\n        variant       : PropTypes.string,\n        InputProps    : PropTypes.object,\n        className     : PropTypes.string,\n        error         : PropTypes.bool,\n        visible       : PropTypes.bool,\n        style         : PropTypes.string,\n        inputProps    : PropTypes.object,\n        value         : PropTypes.string,\n        textareaClass : PropTypes.string\n    }\n\n    static defaultProps = {\n        variant       : 'outlined',\n        InputProps    : {},\n        style         : '',\n        className     : '',\n        error         : false,\n        visible       : true,\n        inputProps    : {},\n        value         : '',\n        textareaClass : ''\n    }\n\n    state = {\n        isCount : false\n    }\n\n    handleOnFocus = () => {\n        this.setState({\n            isCount : true\n        });\n    }\n\n    handleOnBlur = () => {\n        this.setState({\n            isCount : false\n        });\n    }\n\n    render() {\n        const {\n            visible,\n            variant,\n            className,\n            error,\n            style,\n            value,\n            InputProps,\n            inputProps,\n            textareaClass,\n            ...rest\n        } = this.props;\n        const { isCount } = this.state;\n\n        return (\n            visible &&\n            <div className={classNames(styles.wrapper, className)}>\n                <TextField\n                    variant   = {variant}\n                    className = {classNames(styles.input, styles[textareaClass])}\n                    InputProps={{\n                        classes : {\n                            root    : classNames(styles.root, { [styles.error]: error }, style),\n                            focused : styles.inputFocused\n                        },\n                        ...InputProps\n                    }}\n                    FormHelperTextProps = {{\n                        classes : {\n                            root : styles.helperTextRoot\n                        }\n                    }}\n                    onFocus = {this.handleOnFocus}\n                    onBlur  = {this.handleOnBlur}\n                    inputProps = {inputProps}\n                    value   = {value}\n                    {...rest}\n                />\n                {isCount && inputProps.maxLength && value\n                    ? <div className={styles.counter}>\n                        {inputProps.maxLength - value.length}\n                    </div>\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default ExtendedTextField;\n","import React      from 'react';\nimport PropTypes  from 'prop-types';\nimport classnames from 'classnames';\nimport Button     from '@material-ui/core/Button';\n\nimport styles    from './styles.less';\n\nfunction ExtendedButton({\n    variant,\n    color,\n    classes,\n    ...rest\n}) {\n    return (\n        <Button\n            classes = {{\n                root  : classnames(styles.Button, classes.root),\n                label : classnames(styles.Label, classes.label)\n            }}\n            variant   = {variant}\n            color     = {color}\n            target    = '_blank'\n            {...rest}\n        />\n    );\n}\n\nExtendedButton.propTypes = {\n    variant : PropTypes.string,\n    color   : PropTypes.string,\n    classes : PropTypes.object\n};\n\nExtendedButton.defaultProps = {\n    variant : 'contained',\n    color   : 'default',\n    classes : {}\n};\n\nexport default ExtendedButton;\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport * as SessionActions from '../../../actions/login';\nimport TextField from '../../ui-component/TextField'\n\nimport Button from '../../ui-component/Button'\nimport styles from './LoginPage.less';\n\nfunction LoginPage(props) {\n    const [userData, setUserData] = useState({\n        email: '',\n        password: ''\n    });\n    const [err, setErrors] = useState({\n        email: '',\n        password: ''\n    });\n\n    function handleChange(key, value) {\n        setUserData({ ...userData, [key]: value });\n        setErrors({ ...err, [key]: '' });\n    }\n\n    function handleSubmit() {\n    }\n\n    return (\n        <div>\n            <div className={styles.LoginPage} />\n            <div className={styles.inputBlock}>\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                >\n\n                    <Grid item xs={12} >\n                        <TextField\n                            type='email'\n                            placeholder={'Email'}\n                            fullWidth\n                            value={userData.email}\n                            className={styles.input}\n                            onChange={useCallback(e => handleChange('email', e.target.value))}\n                            error={!!err.email}\n                            helperText={err.email}\n                        />\n                        <TextField\n                            type='password'\n                            placeholder={'Password'}\n                            fullWidth\n                            value={userData.password}\n                            className={styles.input}\n                            onChange={useCallback(e => handleChange('password', e.target.value))}\n                            error={!!err.password || !!err['data/password']}\n                            helperText={err.password || err['data/password']}\n                        />\n                        <Button\n                            color='secondary'\n                            fullWidth\n                            className={styles.input}\n                            onClick={handleSubmit}\n                        >Login\n                        </Button>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </div>\n    );\n}\nLoginPage.propTypes = {\n    login: PropTypes.func.isRequired\n};\n\nexport default connect(state => { return { sessions: state.sessions } }, { ...SessionActions })(LoginPage);\n","import React, { Component } from 'react';\nimport api from './apiSingleton';\nimport './App.css';\nimport LoginPage from './components/pages/LoginPage'\nclass App extends Component {\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <LoginPage/>\n      </div>\n    );\n  }\n}\n\nexport default App;\nasync function main() {\n  await api.messages.getMessages()\n}\nmain()\n","export default {\n    palette: {\n        primary: {\n            light       : '#31BFA5',\n            main        : '#31BFA5',\n            dark        : '#31BFA5',\n            contrastText: '#FFF'\n        },\n        secondary: {\n            light       : '#FFF',\n            main        : '#FFF',\n            dark        : '#FFF',\n            contrastText: '#000'\n        }\n    },\n    typography: {\n        body1: {\n            color: 'rgba(0,0,0,0.54)'\n        },\n        subheading: {\n            color: '#444444'\n        },\n        button: {\n            textTransform: 'capitalize'\n        }\n    }\n};\n","\nimport api               from '../apiSingleton';\n\nexport const ASSESSMENTS_GET_REQUEST    = 'ASSESSMENTS_GET_REQUEST';\nexport const ASSESSMENTS_GET_SUCCESS    = 'ASSESSMENTS_GET_SUCCESS';\nexport const ASSESSMENTS_GET_FAIL       = 'ASSESSMENTS_GET_FAIL';\nexport const SEND_NOTIFICATION_REQUEST  = 'SEND_NOTIFICATION_REQUEST';\nexport const SEND_NOTIFICATION_SUCCESS  = 'SEND_NOTIFICATION_SUCCESS';\nexport const SEND_NOTIFICATION_FAIL     = 'SEND_NOTIFICATION_FAIL';\nexport const WINDOWS_GET_REQUEST        = 'WINDOWS_GET_REQUEST';\nexport const WINDOWS_GET_SUCCESS        = 'WINDOWS_GET_SUCCESS';\nexport const WINDOWS_GET_FAIL           = 'WINDOWS_GET_FAIL';\nexport const ABILITIES_GET_REQUEST      = 'ABILITIES_GET_REQUEST';\nexport const ABILITIES_GET_SUCCESS      = 'ABILITIES_GET_SUCCESS';\nexport const ABILITIES_GET_FAIL         = 'ABILITIES_GET_FAIL';\nexport const APPROVE_ASSESSMENT_REQUEST = 'APPROVE_ASSESSMENT_REQUEST';\nexport const APPROVE_ASSESSMENT_SUCCESS = 'APPROVE_ASSESSMENT_SUCCESS';\nexport const APPROVE_ASSESSMENT_FAIL    = 'APPROVE_ASSESSMENT_FAIL';\nexport const APPROVE_ABILITY_REQUEST    = 'APPROVE_ABILITY_REQUEST';\nexport const APPROVE_ABILITY_SUCCESS    = 'APPROVE_ABILITY_SUCCESS';\nexport const APPROVE_ABILITY_FAIL       = 'APPROVE_ABILITY_FAIL';\nexport const LINKING_CHANGE             = 'LINKING_CHANGE';\n\nexport function getAssessments(id, studyId, siteId, windowId) {\n    return async dispatch => {\n        dispatch({\n            type: ASSESSMENTS_GET_REQUEST\n        });\n\n        try {\n            const response = await api.assessments.getAssessments(id, studyId, siteId, windowId);\n\n            if (response.status === 1) {\n                dispatch({\n                    type: ASSESSMENTS_GET_SUCCESS,\n                    list: response.data\n                });\n            }\n        } catch (error) {\n            dispatch({\n                type: ASSESSMENTS_GET_FAIL,\n                error\n            });\n        }\n    };\n}\n\n","import {\n    ASSESSMENTS_GET_REQUEST,\n    ASSESSMENTS_GET_SUCCESS,\n    ASSESSMENTS_GET_FAIL,\n    SEND_NOTIFICATION_REQUEST,\n    SEND_NOTIFICATION_SUCCESS,\n    SEND_NOTIFICATION_FAIL,\n    WINDOWS_GET_REQUEST,\n    WINDOWS_GET_SUCCESS,\n    WINDOWS_GET_FAIL,\n    ABILITIES_GET_REQUEST,\n    ABILITIES_GET_SUCCESS,\n    ABILITIES_GET_FAIL,\n    LINKING_CHANGE\n}                    from '../actions/messages';\n\nconst initialState = {\n    isAssessmentsLoading : false,\n    getAssessmentsError  : null,\n    isSendLoading        : false,\n    sendError            : null,\n    windows              : null,\n    isGetAbilitiesLoading: false,\n    abilities            : [],\n    list                 : []\n};\n\nexport default function participants(state = initialState, action) {\n    const { type, list, error, user, id, windows, abilities } = action;\n\n    switch (type) {\n        case ASSESSMENTS_GET_REQUEST:\n            return { ...state, isAssessmentsLoading: true };\n        case ASSESSMENTS_GET_SUCCESS:\n            return { ...state, isAssessmentsLoading: false, getAssessmentsError: null, list };\n        case ASSESSMENTS_GET_FAIL:\n            return { ...initialState, isAssessmentsLoading: false, getAssessmentsError: error };\n        case SEND_NOTIFICATION_REQUEST:\n            return { ...state, isSendLoading: true };\n        case SEND_NOTIFICATION_SUCCESS:\n            return {\n                ...state,\n                isSendLoading: false,\n                sendError    : null,\n                list         : state.list.map(item => item.id === id ? { ...item, status: 'RERECORD' } : item) };\n        case SEND_NOTIFICATION_FAIL:\n            return { ...state, isSendLoading: false, sendError: error };\n        case WINDOWS_GET_REQUEST:\n            return { ...state, isWindowsLoading: true };\n        case WINDOWS_GET_SUCCESS:\n            return { ...state, isWindowsLoading: false, windows };\n        case WINDOWS_GET_FAIL:\n            return { ...initialState, isWindowsLoading: false };\n        case ABILITIES_GET_REQUEST:\n            return { ...state, isGetAbilitiesLoading: true };\n        case ABILITIES_GET_SUCCESS:\n            return { ...state, isGetAbilitiesLoading: false, abilities };\n        case ABILITIES_GET_FAIL:\n            return { ...initialState, isGetAbilitiesLoading: false };\n        case LINKING_CHANGE:\n            return { ...state, user };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport messages          from './messages';\n\nexport default combineReducers({\n    messages\n});\n","import 'babel-polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppContainer } from 'react-hot-loader';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport themes from './assets/muiTheme';\nimport configureStore from './store/configureStore.js';\n\nconst store = configureStore();\n\nfunction render(Component) {\n    ReactDOM.render(\n        <Provider store={store}>\n            <MuiThemeProvider theme={themes.dark}>\n                <AppContainer>\n                    <Component />\n                </AppContainer>\n            </MuiThemeProvider>\n        </Provider>,\n        document.getElementById('root')\n    );\n}\n\nexport function mountApp() {\n    const NextApp = require('./App.js').default;\n\n    render(NextApp);\n}\n\nmountApp();\n\nif (module.hot) {\n    module.hot.accept('./App.js', () => mountApp());\n}\n\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware                           from 'redux-thunk';\nimport rootReducer                               from '../reducers';\n\nexport default function configureStore() {\n    const composeEnhancers = process.env.NODE_ENV !== 'production' ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose: // eslint-disable-line\n        compose;\n\n    const store = createStore(\n        rootReducer,\n        composeEnhancers(\n            applyMiddleware(thunkMiddleware)\n        )\n    );\n\n    if (module.hot) {\n        module.hot.accept('../reducers', () => {\n            const nextRootReducer = require('../reducers/index').default;\n\n            store.replaceReducer(nextRootReducer);\n        });\n    }\n\n\n    return store;\n}\n","module.exports = __webpack_public_path__ + \"static/media/styles.fcf464e7.less\";","module.exports = __webpack_public_path__ + \"static/media/LoginPage.d41d8cd9.less\";"],"sourceRoot":""}